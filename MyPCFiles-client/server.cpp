#include <server.h>

Server::~Server(){
    //TODO write destructor
}

//Возвращаемое значение приведённых ниже функций окончательно не определено
//Скорее всего, возвращать надо будет либо int код ошибки, либо bool результат работы

void Server::disconnect(){
    //TODO cancel sftp/ssh connection
    //Необходимо закрыть sftp и ssh подключение
    //Если на данный момент на сервер или с сервере загружаются файлы, то нужно создать диалог, запрашивающий подтверждение пользователя
    //В зависимости от ответа, необходимо либо отменить закрытие подключения, либо прервать загруску файлов и отключиться от сервера
}

void Server::connect(){
    //TODO open sftp/ssh connection
    //Необходимо создать ssh и затем sftp подключение
    //Затем необходимо последовательно вызвать функции verifyServer и auth (подробнее см. документацию libssh)
    //Если это первое подключение к этому серверу, т.е. оно проводилось с помощью логина и пароля, необходимо вызвать функцию generateKeys
}

void Server::verifyServer(){
    //TODO check server eventide
    //Функция производит верификацию сервера (см. документацию libssh, там естьб пример)
}

void Server::auth(){
    //TODO provide autitification on the server
    //Функция производит авторизацию пользователя на сервере (см. документацию libssh, там естьб пример)
    //Прежде всего, необходимо попытаться авторизироваться по ключу
    //Если авторизация по ключу не прошла, необходимо авторизироваться по логину и паролю, их нужно запросить у пользователя с помощью диалога
}

void Server::generateKeys(){
    //TODO generate Keys
    //Функция генерирует пару ключей для асссиметричного шифрования и сохраняет приватный ключ - на сервере, публичный ключ - в поле - объекта
}

void Server::showErrorDialog(){
    //TODO dialog of error
    //При возникновении ошибки необходимо сообщить обэтом пользователю
}
